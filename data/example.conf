/*
 *
 * (C) 2004-2007 Denora Team
 * Contact us at info@denorastats.org
 *
 * Example configuration file for Denora.  After making the appropriate
 * changes to this file, place it in the Denora data directory (as
 * specified in the "Config" script, default /usr/local/lib/denora)
 * under the name "denora.conf".
 *
 * The configuration format consists of blocks, each containing name-value
 * pairs, tags, or string data.  It is designed to be easily readable by
 * both human and denora.
 * 
 * A block consists of a block name, an opening '{' brace, statements, a
 * closing '}' brace, and a ';' semicolon.  A statement consists of a
 * name, possibly followed by a value, and ending with a semicolon.
 * Strings that contain special characters or whitespace can be surrounded
 * by '"' double quotes.  All elements of the configuration are separated
 * by whitespace, and can be packed on one line, or broken up over several
 * lines.
 *
 * $Id$
 *
 */

# Comments are supported in three forms:
    /* C style
       multi-line */
    # shell style single-line
    // C++ style single-line

/*
 * A sample block:
 * 
 *     block {
 *         name value;            # A statement with a name value
 *         name 123;              # A statement with a number value
 *         name "hello world";    # A statement with a string value
 *         tag;                   # A simple tag
 *         "will code for food";  # A simple string
 *     };
 * 
 * The parser also understands a special include directive outside of a
 * block context:
 * 
 *     include path/to/file.conf;
 *
 * In the documentation for each directive, one of the following will be
 * included to indicate whether an option is required:
 *
 * [REQUIRED]
 *    Indicates a block which must be given. Without it, Denora will
 *    not start.
 *
 * [RECOMMENDED]
 *    Indicates a block which may be omitted, but omitting it may cause
 *    undesirable side effects.
 *
 * [OPTIONAL]
 *    Indicates a block which is optional. If not given, the feature
 *    will typically be disabled.  If this is not the case, more
 *    information will be given in the documentation.
 *
 * [DISCOURAGED]
 *    Indicates a block which may cause undesirable side effects if
 *    specified.
 *
 * [DEPRECATED]
 *    Indicates a directive which will disappear in a future version of
 *    Denora, usually because its functionality has been either
 *    superseded by that of other blocks or incorporated into the main
 *    program.
 *
 */


###########################################################################
# Connect [REQUIRED]
# Specifies the remote server hostname/port where Stats shall connect to.
#
# The remote hostname and port may be overridden at runtime with the
# -remote command-line option. The password may not be set at runtime.

connect {
    // required tokens
    hostname    localhost;    # Remote server hostname
    port        7029;         # Remote server port
    passwd      "mypass";     # Password to send to other server
    protocol    "unreal32";   # ircd protocol see below

    // optional tokens
    #quitprefix  "Quit:";     # IRCd quit prefix (case sensitive!)
    #bindhost    nowhere;     # IP to connect from
    #bindport    0;           # Port number to connect from
};

# The hostname may either be a standard Internet hostname or dotted-quad
# numeric address; the port number must be an integer between 1 and 65535
# inclusive.  The password is a string which should be enclosed in
# double quotes if it contains any spaces (or just for clarity).
#
# bind specifies the local address to bind to before connecting to the
# remote server. This may be useful on multihomed hosts.
#   If this is not specified, Stats will let the operating system choose
# the local address.  If only a hostname is specified, Stats will bind
# to that address but let the operating system choose the local port number.
#
# If you don't know what this means or don't need to use it, just leave
# the optional tokens commented out.
#
# This tokens may be overridden at runtime by the -local
# command-line option.
#
# The quitprefix token is used by Denora to parse Quit messages in
# order to detect Local kills from IRCds which doesn't send an
# specific KILL event, like Unreal32.
#
# Common prefixes:
# Asuka IRCu       : Quit
# Bahamut 1.8.x    : Quit:
# InspIRCd 1.1.x   : Quit:
# ircu 2.10.11+    : Quit
# Nefarious IRCu   : Quit
# UnrealIRCd 3.2.x : Quit:
#
# There may be only one Connect block.
#
# IRCD Protocol
# Asuka IRCu          : asuka
# Bahamut 1.4 and 1.8 : bahamut
# Charybdis 1.0       : charybdis
# Hybrid 7.0          : hybrid
# Hyperion/DancerIRCD : hyperion
# inspircd 1.1        : inspircd11
# ircu 2.10.11+       : ircu
# Nefarious IRCu      : nefarious
# ngIRCD 0.9.1 IRCD   : ngircd
# Plexus 3            : plexus3
# Ratbox 2.0          : ratbox
# ScaryNet 2.10.11.x  : scarynet
# SolidIRCD           : solidircd
# Ultimate 3.0        : ultimate3
# Unreal 3.2          : unreal32
#
###########################################################################

###########################################################################
# Identity [REQUIRED]
# Stats identity information.
# The name token specifies the IRC server name which Denora should
# use. May be overridden by the -name command-line option.
#
# The desc token specifies the text which should appear as the server's
# information in /whois and similar queries.
# May be overridden by the -desc command-line option.
#
# The user token specifies the user@host mask which should be used by the
# Stats pseudoclients.  May be overridden by the -user and -host
# command-line options.

identity {
    // required tokens
    name        "stats.localhost.net";           # Stats server name
    desc        "Statistics for IRC Networks";   # Stats server description
    user        "stats@localhost.net";           # Stats pseudo username
    language    1;                               # Default language
};

# The language token sets the default language.
#
# Current supported languages:
# 1.- English
# 2.- Spanish
# 3.- German
# 4.- French
# 5.- Dutch
# 6.- Italian
#
# If you ever wanted to know how to translate Denora in your
# language, read the chapter about it in the README.
# There may be only one Identity block.
###########################################################################

###########################################################################
# StatServ [REQUIRED]
# Specify the nickname and "real" name for the Stats pseudoclient.

statserv {
    // required tokens
    nick        "StatServ";                  # Nickname
    real        "Stats Server";              # Real name

    // optional tokens
    #aliasnick   "StatServ2";                # Optional alias
    #aliasreal   "Stats Server Forwarder";   # Optional alias Realname
    #autoop;                                 # Enable pseudo clients autoop
    #automode "+ov";                         # If autoop network wide mode to set
};

# Optionaly you can set an alternate nickname. When a user will
# /msg aliasnick something, it will be forwarded to nick, and nick will
# answer. This can be used to ease the migration from another network,
# for example if your stats are called StatsManager and the other network
# calls them StatServ.
# If you want StatServ to get mode +o on channels, use the autoop token.
# There may be only one StatServ block.
###########################################################################

###########################################################################
# Filenames [REQUIRED]
# NOTE: All filenames are relative to the Stats data directory.

filenames {
    // required tokens
    pid         stats.pid;    # File containing Stats' process ID.
    motd        stats.motd;   # Name of the Message of the Day file.
    htmlfile    "/home/denora/denora.html";  # Path to the HTML file
    channeldb   chan.db;
    ctcpdb      ctcp.db;
    serverdb    server.db;
    chanstatsdb ChannelStats.db;
    tlddb       tld.db;
    excludedb   exclude.db;
    statsdb     stats.db;
    admindb     admin.db;
};
# There may be only one Filenames block.
###########################################################################

###########################################################################
# Backup [RECOMMENDED]
# Specify information on when Denora will do backups

backup {
    // required tokens
    keepbackups;            # Enable backups
    freq         1d;        # Time between making a backup
    keepfor      7d;        # Time to keep the backups

};

###########################################################################

###########################################################################
# Netinfo [REQUIRED]

netinfo {
    // required tokens
    name        "LocalNet";    # Network's name where Denora is running on.

    // optional tokens
    #numeric     "22";         # Numeric ID
    #nickchar    "ger";        # See Unreal documentation
    #ctcpusers;                # get the ctcp version users
    #ctcpeob;                  # If should only ctcp users when the connect after server 
                               # has sent end of burst still requires ctcpusers to be enabled
    #largenet;                 # Large Networks of 100,000+ or people using remote sql
                               # (implies 'nonicktracking')
    #nonicktracking;           # Disables Nick Tracking. Use this option if you got a big
                               # network with many monitored channels to lower the SQL load
    #ustatsregistered;         # Enable this to only track registered (+r) users in chanstats
    #sphtml;                   # hide +s/+p channels from HTML stats
    #excludeserv "services.yournet.net";                # Exclude any user from this server
    #statspage "http://www.yoururlhere.net/stats.html"; # web address for html output
    #hiddenprefix "";                                   # Prefix for hidden hosts on P10-based ircds
    #hiddensuffix ".users.mynet.tld";                   # Suffix for hidden hosts on P10-based ircds
};

#  Many ircd identify themselves with a Numeric ID when using this token
#  consult your ircd's documentation before using this.
#
#  The largnet token disables: chanstats, host lookup, tld, ctcpusers
#  statserv alias, motd, server bans, channel bans, server uptime and
#  server version. We don't recommend this for nets that want info. It's
#  really done for people whom use remote sql tables cause it cuts the
#  queries way down.
# There may be only one Netinfo block.
###########################################################################

###########################################################################
# Timeout [REQUIRED]
#

timeout {
    // required tokens
    read        5s;    # Period for reading from network.
    warning     4h;    # Interval for sending messages for program errors.
    update      2m;    # time between saving long term data to disk
    htmlupdate  2m;    # time between exporting the html files
    pingfreq    2m;    # time between pinging servers to check for lag
    uptimefreq  1d;    # time between uptime servers to check
    sqlfreq     5m;    # time between checking the sql server is there
    clearinactive 30d; # clear inactive users from chanstats table
    clearchaninactive 30d; # clear inactive channels

    /* The amount of time which we must keep users in the user table.
       Since users connect/disconnect are very common, we don't keep them for a
       long time. 2 days looks reasonable.
    */
    usercache   2d;
    userfreq    10s;   # How often *(in seconds) to we check for obsoleted users ?

    /* The amount of time which we must keep servers in the server table.
       Since servers split are uncommon, we keep them for a week.
    */
    servercache 7d;
    serverfreq  5s;    # How often *(in seconds) to we check for obsoleted servers ?

};

# The warning token sets the interval between sending warning messages
# for program errors via WALLOPS/GLOBOPS.
#
# *This shouldn't be set any higher than 10 seconds, and 1 second is
# best if your system is powerful enough (or your network small enough)
# to handle it.  0 will cause the timeout list to be checked every time
# through the main loop, which will probably slow down Stats too
# much to be useful on most networks.
#
# Note that this value is not an absolute limit on the period between
# checks of the timeout list; the period may be as great as the read
# token during periods of inactivity.
# There may be only one Timeout block.
###########################################################################

###########################################################################
# Options [OPTIONAL]
# The Options block configures various options for Denora itself.
# This block is recommended.

options {
    // recommended tokens
    keeplogs    7;             # Number of _days_ log files are kept.

    // optional tokens
    #logchan     "#denora";    # Channel used for Denora for output logs.
    #dumpcore;                 # Dump core on segmentation faults.
    #hidestatso;               # Only show stats o to IRC Operators.
    #tokens;                   # Allows IRC Networks to use TOKEN commands.
    #ts6;                      # Use TS6 code on IRCD that use it
    #chanstatsdef "off";       # Default flag for ChanStats Fantasy commands
                               # off = default
                               # on  = enabled but will message the results
                               # notice = enabled and will notice the results
    #smiley " :) ;) :-) ;-) ^_^ :-D :D :-P :P =) ;D :p "; #Default smileys used by chanstats
    #hideuline;                # hide ulines from hmtl/xml output
    #nologs;                   # only use if you want NO log files
    #trigger "!";              # character to use for triggering chanstats
    #jupemaster "services.your.net"  #name of the server whom issues JUPE so leafs can be ignored
};

# The keeplogs token sets the number of days log files are kept.
# If you don't give it, or if you set it to 0, logs will be kept
# indefinitely.
# NOTE: Denora must run 24 hours a day for this feature to work.
#
# When the logchan is defined, Denora will output log messages to this
# channel.
# IMPORTANT: This can be a security risk so make certain this channel
# is sufficiently protected from normal access.
#
# The dumpcore token will make Denora dump core when a segmentation
# fault occurs. This is generally not needed, but if Denora is crashing
# on your network and you want to make a bug report, having a core
# file may be of great help.
#
# The tokens token allows IRC networks to use TOKEN commands instead of
# the standard commands. This saves bandwidth.
# There may be only one Options block.
###########################################################################

###########################################################################
# Admin [SUGGESTED]

admin {
    // required tokens
    name        DrStein;      # Admin username
    passwd      superpass;    # Admin password
    hostname    *@*;          # Admin hostmask

    // optional tokens
    language    2;            # Admin language
};

admin {
    // required tokens
    name        Trystan;
    passwd      superpass;
    hostname    *@*;

    // optional tokens
    language    1;
};

# There may be multiple Admin blocks.
###########################################################################

###########################################################################
# SQL [OPTIONAL]
# Your SQL configuration for use with Denora.
# To make use of SQL use these tokens and change their setting to the
# appropriate values.
#
# NOTE: Denora support MySQL. Future versions may support other SQL
#       technologies.

sql {
    // required tokens
    type        mysql;               # SQL server type. (read above)
    host        localhost;           # SQL server hostname.
    user        anonymous;           # SQL user to log in with.
    passwd      password;            # SQL pass required for the specified
                                     # user to log in.
    name      denora;                # SQL database name Denora uses

    // optional tokens
    #sock        /tmp/mysql.sock;    # MySQL UNIX socket
    #port        3306;               # MySQL TCP port
    #retries     10;
    #retrygap    10;
    #retryonlost  0;                 # attempt to reconnect sql even if we lost the server
    #disableopt;                     # Use with caution, only enable this if you are having problems
                                     # with mysql and zlib functions

# Following are not recommended settings and should only be used if you know
# what you are doing and the problems that come with doing this
# it is highly recommended that if you do use this that you use usercache and servercache
    #keepusers;                      # Do not truncate the users table on startup
    #keepservers;                    # Do not truncate the server table on startup

};

# The retries and retrygap tokens let you define how often and with how
# much interruption Denora shall retry to open a connection when losing
# the contact to the mysql db.
# The product of these values must be between 1 and 60.
#
# Please read docs/MYSQL file for more info and details.
# There may be only one SQL block.
###########################################################################

###########################################################################
# Tables [REQUIRED]

tables {
    // required tokens
    config		denora_config; # Name of the Denora Configuration table
    users       user;          # Name of the Users table
    chanbans    chanbans;      # Name of the Channel Bans table
    chanexcept  chanexcept;    # Name of the Channel Exceptions table
    ison        ison;          # Name of the ISON table
    server      server;        # Name of the Servers table
    gline       glines;        # Name of the Glines table
    chan        chan;          # Name of the Channel table
    maxvalue    maxvalues;     # Name of the Maxvalues table
    chaninvite  chaninvites;   # Name of the Channel Invites table
    tld         tld;           # Name of the TLD table
    ctcp        ctcp;          # Name of the CTCP table
    sqline      sqline;        # Name of the SQLine table (required for Bahamut based ircd)
    sgline      sgline;        # Name of the SGLine table (required for Bahamut based ircd)
    csaliases   aliases;       # Name of the Chan Stats Aliases table
    cscstats    cstats;        # Name of the Chan Stats Channel table (cstats)
    csustats    ustats;        # Name of the Chan Stats User table (ustats)
    stats       stats;         # Name of the Hourly stats table
    spamfilter  spamfilters;   # Name of the Spam Filter Table (required for Unreal IRCds)
    current     current;       # Name of the table which holds the current info
    chanstats   channelstats;  # Name of the Channel Stats by Hour
    servstats   serverstats;   # Name of the Server Stats by Hour
    chanquiet   chanquiet;     # Name of the Channel Quiet table
    admins      admin;         # Name of the Admins table
};

# There may be only one Tables block.
###########################################################################

###########################################################################
# Modules [OPTIONAL]
#
# When compiled with module support, the autoload token contains a module
# to automatically load as soon as possible.
#
# The delayed token contains a module to automaticaly load when Stats are
# ready for new clients. There can be up to 128 autoload tokens.

modules {
    // optional tokens
    #autoload   ss_uptime;           # Name of the module to load on startup.
    #autoload   next_module;         # Name of the next module.
    #delayed    irc_delay_example;   # Name of the module to load once Stats
                                     # is already connect to the IRCd 
};

# There can be up to 128 delayed tokens.
# Please read docs/MODULES file for more info and details.
# There may be only one Modules block.
###########################################################################

###########################################################################
# XML RPC [OPTIONAL]
#
# XML RPC is a lightweight Server/Parser allowing user to send XMLRPC
# data to Denora and have the data returned in the XMLRPC standard.
#

xmlrpc {
    
    #xmlrpc_enable                   # You must set this for XMLRPC to start
    #xmlrpc_host 127.0.0.1;          # IP address to have the XMLRPC server on
    #xmlrpc_port 8080;               # Port on which to listen to
    #xmlrpc_accept 127.0.0.1;        # Accept only data from these hosts
    #xmlrpc_accept 192.168.0.1;      # Accept only data from these hosts
};

# There can be up to 128 client host address
# Please read docs/XMLRPC file for more info and details.
###########################################################################

