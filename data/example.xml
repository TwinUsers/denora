<!--
 * 
 * (c) 2004-2014 Denora Team
 * Contact us at info@denorastats.org
 *
 * Denora configuration file (Example)
 * *************************
 *
 * After making the appropriate changes to this file, place it in the
 * Denora data directory (as specified in the "Config" script, default
 * /usr/local/lib/denora) under the name "denora.conf".
 *
 * The configuration format consists of blocks, each containing name-value
 * pairs, tags, or string data.  It is designed to be easily readable by
 * both human beings and Denora.
 * 
 * A block consists of a block name, an opening '{' brace, statements, a
 * closing '}' brace, and a ';' semicolon.  A statement consists of a
 * name, possibly followed by a value, and ending with a semicolon.
 * Strings that contain special characters or whitespace can be surrounded
 * by '"' double quotes.  All elements of the configuration are separated
 * by whitespace, and can be packed on one line, or broken up over several
 * lines.
 --!>
 
 # Comments are supported in three forms:
 <!--
		xml style
 --!>

     # shell style single-line
     // C++ style single-line

<!--
 * A sample block:
 * 
 *     block {
 *         name value;            # A statement with a name value
 *         name 123;              # A statement with a number value
 *         name "hello world";    # A statement with a string value
 *         tag;                   # A simple tag
 *         "will code for food";  # A simple string
 *     };
 * 
 * You can also use an include directive outside of a block context, if
 * you want to split up your configuration in several files:
 * 
 *     include path/to/file.conf;
 *
 * In the documentation for each directive, one of the following will be
 * included to indicate whether an option is required:
 *
 * [REQUIRED]
 *    Indicates a block which must be given
 *    Without it, Denora will not start.
 *
 * [RECOMMENDED]
 *    Indicates a block which may be omitted, but omitting it may cause
 *    undesirable side effects.
 *
 * [OPTIONAL]
 *    Indicates a block which is optional. If not given, the feature
 *    will typically be disabled.  If this is not the case, more
 *    information will be given in the documentation.
 *
 * NOTE: unless other specified, there may be only one block with the
 *       same name.
--!>


###########################################################################
# Connect [REQUIRED]
#   Information needed for Denora to connect to the uplink server.
#
# Required tokens:
#  hostname    - Remote server hostname
#                This must either be a standard Internet hostname
#                or dotted-quad numeric address
#                This may be overridden at runtime with the "-remote"
#                command-line option.
#  port        - Remote server port
#                This must be an integer between 1 and 65535
#  passwd      - Password to send to the uplink server
#                The password is a string which should be enclosed in
#                double quotes if it contains any spaces
#                This may be overridden at runtime with the "-remote"
#                command-line option.
#  protocol    - IRCd protocol to use.
#                Choose one of the following, depending on your ircd:
#                  Bahamut 1.4 and 1.8    : bahamut
#                  Charybdis 1.0          : charybdis
#                  inspircd 1.1           : inspircd11
#                  inspircd 1.2-2.0       : inspircd12
#                  ircd-rizon 3.0         : ircdrizon
#                  ircu 2.10.11+          : ircu
#                  Nefarious IRCu 1.3     : nefarious13
#                  Ratbox 2.0             : ratbox
#                  ScaryNet 2.10.11.x     : scarynet
#                  Unreal 3.2             : unreal32
#
# Optional tokens:
#  bindhost    - IP to connect from
#                This pecifies the local address to bind to before
#                connecting to the remote server. This may be useful
#                on multihomed hosts. If this is not specified, Stats
#                will let the operating system choose the local address.
#  bindport    - Port number to connect from
#                If only a bindhost is specified, Stats will bind to that
#                address but let the operating system choose the local
#                port number.
#  quitprefix  - IRCd quit prefix (case sensitive!)
#                This is used by Denora to parse Quit messages in order to
#                detect Local kills from IRCds which don't send a specific
#                KILL event, like Unreal32.
#                Common prefixes:
#                  Bahamut 1.8.x    : "Quit:"
#                  InspIRCd 1.1.x   : "Quit:"
#                  ircu 2.10.11+    : "Quit"
#                  Nefarious IRCu   : "Quit"
#                  UnrealIRCd 3.2.x : "Quit:"

<connect>
    // required tokens
    <RemoteServer>localhost</RemoteServer>
    <RemotePort>8067</RemotePort>
    <RemotePassword>mypass</RemotePassword>;
    <IRCDModule>unreal32</IRCDModule>

    // optional tokens
#   <LocalHost>nowhere</LocalHost>
#   <LocalPort>0</LocalPort>
#	<QuitPrefix>Quit:</QuitPrefix>
</connect>

###########################################################################
# Identity [REQUIRED]
#   Stats identity information.
#
# Required tokens:
#  name        - Stats server name
#                This specifies the IRC server name which Denora should
#                use. May be overridden by the -name command-line option.
#  desc        - Stats server description
#                This specifies the text which should appear as the
#                server's information in /whois and similar queries.
#                May be overridden by the -desc command-line option.
#  user        - Stats pseudo username
#                This specifies the user@host mask which should be used by
#                the Stats pseudoclients. May be overridden by the -user
#                and -host command-line options.
#  language    - Default language
#                Currently supported languages:
#                  English    : 1
#                  Spanish    : 2
#                  German     : 3
#                  French     : 4
#                  Dutch      : 5
#                  Italian    : 6
#                  Russian    : 7
#                  Portuguese : 8
#                If you want to know how to translate Denora in your
#                language, read the chapter about it in the README.

<identity>
    // required tokens
    <ServerName>stats.localhost.net</ServerName>
    <ServerDesc>Statistics for IRC Networks</ServerDesc>;
    <ServiceUser>stats</ServiceUser>
    <ServiceHost>localhost,net</ServiceHost>
    <StatsLanguage>1</StatsLanguage>;
</identity>

###########################################################################
# StatServ [REQUIRED]
#   Specify the nickname and "real" name for the Stats pseudoclient.
#
# Required tokens:
#  nick        - Bot nickname
#                The nickname the pseudo client (bot) will have
#  real        - Bot realname
#                The realname the pseudo client (bot) will have
#
# Optional tokens:
#  aliasnick   - Optional alias nickname
#                When a user will /msg "aliasnick" something, it will be
#                forwarded to "nick", and "nick" will answer. This can be
#                used to ease the migration from another network, for
#                example if your stats are called StatsManager and the
#                other network calls them StatServ.
#  aliasreal   - Optional alias realname
#                Same as "real", but for "aliasnick"
#  autoop      - Makes the bot get mode +o on channels
#  automode    - autoop mode
#                If autoop is enabled, this allows you to specify the
#                mode(s) the bot will get, default is "+o"
#  partonempty - Makes the bot part empty channels

<statserv>
    // required tokens
    <StatServNick>StatServ</StatServNick>
    <StatServDesc>Stats Server<StatServDesc>

    // optional tokens
    #<StatServNickAlias>StatServ2</StatServNickAlias>
    #<StatServDescAlias>Stats Server Forwarder</StatServDescAlias>
    #<AutoOp>1</AutoOp>
    #<AutoMode>+ov</AutoMode>
    #<PartOnEmpty>1</PartOnEmpty>
</statserv>

###########################################################################
# Filenames [REQUIRED]
#   NOTE: All filenames are relative to the Stats data directory.
#
# Required tokens:
#  pid         - File containing Stats' process ID
#  motd        - Name of the Message of the Day file
#  channeldb   - Flat DB file for channel data.
#  ctcpdb      - Flat DB file for ctcp data.
#  serverdb    - Flat DB file for server data.
#  chanstatsdb - Flat DB file for channel stats data.
#  tlddb       - Flat DB file for tld data.
#  excludedb   - Flat DB file for exclude data.
#  statsdb     - Flat DB file for network data.
#  admindb     - Flat DB file for admin data.
#
# Optional tokens:
#  htmlfile    - Path to the HTML file
#                If set, this will enable Denora to write stats to html
#                Please specify a complete path contained in doublequotes

<filenames>
    // required tokens
    <PIDFilename>stats.pid</PIDFilename>
    <MOTDFilename>stats.motd</MOTDFilename>
    <ChannelDB>chan.db</ChannelDB>
    <ctcpDB>ctcp.db</ctcpDB>
    <ServerDB>server.db</ServerDB>
    <ChannelStatsDB>ChannelStats.db</ChannelStatsDB>
    <TLDDB>tld.db</TLDDB>
    <excludeDB>exclude.db</excludeDB>
    <statsDB>stats.db</statsDB>

    // optional tokens
    #<HTMLFilename>/home/denora/denora.html</HTMLFilename>
</filenames>

###########################################################################
# Backup [RECOMMENDED]
#   Specify information on when Denora will do backups of the .db files
#
# Required tokens:
#  keepbackups - Enable backups
#  freq        - Time between making a backup
#  keepfor     - Time to keep the backups

<backup>
    // required tokens
    <KeepBackups>enable</KeepBackups>
    <BackupFreq>1d</BackupFreq>
    <KeepBackupsFor>7d<KeepBackupsFor>
</backup>

###########################################################################
# Netinfo [REQUIRED]
#   Specify various network-related information and settings
#
# Required tokens:
#  name             - Network's name where Denora is running on
#
# Optional tokens:
#  numeric          - Numeric ID
#                     Sets the numeric Denora should have. If your IRCd
#                     has a numeric, Denora will need one too. Consult
#                     your ircd's documentation before using this.
#  nickchar         - Sets the nickchar encoding for UnrealIRCd 3.2
#                     Only needed if you use that ircd. See the Unreal
#                     documentation for more information about this.
#  hiddenprefix     - Prefix for hidden hosts on P10-based ircds
#  hiddensuffix     - Suffix for hidden hosts on P10-based ircds
#  ctcpusers        - Get the CTCP version from users
#                     The users connecting to your network will receive
#                     a ctcp version request from the Denora bot.
#  ctcpeob          - Disable CTCP during burst
#                     Avoid sending out ctcp requests to users during burst.
#                     This is only useful if you restart Denora often and
#                     don't want to annoy your users.
#                     "ctcpusers" still needs to be enabled.
#  largenet         - Disable extended features
#                     This will do everything what "nonicktracking" does,
#                     and additionally disable: chanstats, host lookup, tld,
#                     ctcpusers, statserv alias, motd, server bans, channel
#                     bans, server uptime and server version.
#                     We don't recommend using this. It's only done for
#                     people who use a remote SQL database and really need
#                     to reduce the query load.
#  ustatsregistered - Only track registered users
#                     Enable this to only track registered (+r or account)
#                     users in chanstats. This will reduce the risk of nick
#                     confusion and require users to register to services
#                     in order to be tracked by chanstats.
#  ustatsnobots     - This will exclude all users with mode +B from chanstats
#  sphtml           - Hide +s/+p channels from HTML stats
#                     This only applies for HTML output, not for SQL. To
#                     hide those channels from SQL, just use an appropriate
#                     database query.
#  excludeserv      - Exclude any user from this server
#                     This only applies for HTML output, not for SQL. To
#                     hide those servers from SQL, just use an appropriate
#                     database query.
#  statspage        - URL for Web Stats
#                     This will be advertised in the Denora reply to the
#                     STATS command. Put a link to your HTML output file,
#                     or to phpDenora, for example.

<netinfo>
    // required tokens
    <NetworkName>LocalNet</NetworkName>

    // optional tokens
    #<Numeric>22</Numeric>
    #<NickChar>latin1</NickChar>
    #<HiddenPrefix>""</HiddenPrefix>;
    #<HiddenSuffix>.users.mynet.tld<HiddenSuffix>; 
    <CTCPUsers />
    #<CTCPUsersEOB />
    <UserStatsRegistered />
    <UserStatsExcludeBots />
    #<SP_HTML />;
    #<ExcludeServers>services.yournet.net</ExcludeServers>
    #<StatsPage>http://www.yoururlhere.net/stats.html</StatsPage>
</netinfo>

###########################################################################
# Timeout [REQUIRED]
#   Specify various timeout options for performing certain operations
#
# Note: the timeout values are not an absolute limit on the period between
# checks of the timeout list: the period may be as great as the read token
# during periods of inactivity.
#
# Required tokens:
#  read        - Period for reading from network.
#  warning     - Interval for sending messages for program errors.
#                This token sets the interval between sending warning
#                messages for program errors via WALLOPS/GLOBOPS.
#  update      - Time between saving long term data to disk
#  htmlupdate  - Time between exporting the html files
#  pingfreq    - Time between pinging servers to check for lag
#  uptimefreq  - Time between uptime servers to check
#  sqlfreq     - Time between checking if the sql server is there
#  clearinactive     - Clear inactive users from chanstats
#  clearchaninactive - Clear inactive channels from chanstats
#  usercache   - The amount of time which we must keep users in the user
#                table. Since users connect/disconnect very often, it is
#                reasonable to keep this at a low value such as 2 days to
#                avoid filling the table with too much data.
#                If using applications that rely on user information, such
#                as a Denora module or phpDenora, it is recommended to set
#                this to a higher value such as 30 days, if possible.
#  userfreq    - How often (in seconds) to check for obsoleted users?
#                This shouldn't be set any higher than 10 seconds, and 1
#                second is best if your system is powerful enough (or your
#                network small enough) to handle it. 0 will cause the
#                timeout list to be checked every time through the main
#                loop, which will probably slow down Stats too much to be
#                useful on most networks.
#  servercache - The amount of time which we must keep servers in the
#                server table.  Since servers split are uncommon, we keep
#                them for a week.
#                If using applications that rely on server information,
#                such as a Denora module or phpDenora, it is recommended to
#                set this to a higher value such as 30 days, if possible.
#  serverfreq  - How often (in seconds) to check for obsoleted servers?
#                This shouldn't be set any higher than 10 seconds, and 1
#                second is best if your system is powerful enough (or your
#                network small enough) to handle it. 0 will cause the
#                timeout list to be checked every time through the main
#                loop, which will probably slow down Stats too much to be
#                useful on most networks.

<timeout>
    // required tokens
    <ReadTimeout>5s</ReadTimeout>
    <WarningTimeout>4h<WarningTimeout>
    <UpdateTimeout>2m<UpdateTimeout>
    <HTMLTimeout>2m<HTMLTimeout>
    <PingFrequency>2m<PingFrequency>
    <UptimeTimeout>1d<UptimeTimeout>
    <SQLPingFreq>5m<SQLPingFreq>
    <ClearInActive>30d</ClearInActive>
    <ClearChanInActive>30d</ClearChanInActive>
    <UserCacheTime>2d</UserCacheTime>
    <UserCleanFreq>10s</UserCleanFreq>
    <ServerCacheTime>7d</ServerCacheTime>
    <ServerCleanFreq>5s</ServerCleanFreq>
</timeout>

###########################################################################
# Options [OPTIONAL]
#   Configures various options for Denora itself.
#
# Optional tokens:
#  keeplogs    - Number of days log files are kept
#                This sets the number of days log files are kept. If you
#                don't give it, or if you set it to 0, logs will be kept
#                indefinitely. NOTE: Denora must run 24 hours a day for
#                this feature to work.
#  logchan     - Channel used for Denora for output logs.
#                When defined, Denora will output log messages to this
#                channel. IMPORTANT: This can be a security risk so make
#                certain this channel is sufficiently protected from normal
#                access.
#  dumpcore    - Dump core on segmentation faults.
#                This will make Denora dump core when a segmentation fault
#                occurs. This is generally not needed, but if Denora is
#                crashing on your network and you want to make a bug
#                report, having a core file may be of great help.
#  hidestatso  - Only show stats o to IRC Operators.
#  tokens      - Allows IRC Networks to use TOKEN commands.
#                This allows IRC networks to use TOKEN commands instead of
#                the standard commands. This saves bandwidth.
#  ts6         - Use TS6 code on IRCD that use it
#  chanstatsdef - Default flag for ChanStats Fantasy commands
#                   off = default
#                   on  = enabled but will message the results
#                   notice = enabled and will notice the results
#  smiley      - Default smileys used by chanstats
#  hideuline   - hide ulines from hmtl/xml output
#  nologs      - only use if you want NO log files
#  trigger     - character to use for triggering chanstats
#  jupemaster  - name of the server who issues JUPE so leafs can be ignored
#  BackTrace   - allow Denora to run backtraces when something goes wrong internally, this
#                is a debugging feature and now meant for most users, unless you are trying to
#                find a crash
#  SQLQueryBT  - On external sql queries, execute backtrace and log it, this will make your logs
#                grow but is helpfully in debugging crashes with sql queries.

<options>
    // optional tokens
    <KeepLogs>7</KeepLogs>
    #<LogChannel>#denora</LogChannel>
    #<DumpCore />
    #<SQLQueryBT />
    #<BackTrace />
    #<HideStatsO />
    #<UseTokens />
    #<UseTS6>
    #<CSDefFlag>off</CSDefFlag>
    #<Smiley>:) ;) :-) ;-) ^_^ :-D :D :-P :P =) ;D :p </Smiley>
    #<HideUline />
    #<NoLogs />
    #<ChanStatsTrigger>!</ChanStatsTrigger>
    #<JupeMaster>services.your.net</JupeMaster>
</options>

###########################################################################
# Admin [RECOMMENDED]
#  Define the users that will be able to login to the Denora pseudoclient
#
#  There may be multiple Admin block.
#
#  NOTE: a user must be opered to the ircd to be able to login to Denora
#
# Required tokens:
#  name        - Admin username
#  passwd      - Admin password
#  hostname    - Admin hostmask
#
# Optional tokens:
#  language    - Admin language
#                Currently supported languages:
#                  English : 1
#                  Spanish : 2
#                  German  : 3
#                  French  : 4
#                  Dutch   : 5
#                  Italian : 6
#                  Russian : 7
#                If not set, the default language will be used.

<admin>
    // required tokens
    <name>DrStein</name>
    <passwd>superpass</passwd>
    <hostname>*@*</hostname>

    // optional tokens
    #<language>1</language>;
</admin>

<admin>
    <name>Hal9000</name>
    <passwd encode=crypt>$1$hyafG.FI$yHAWrYMQWMcecvlp.MZV41</passwd>
    <hostname>Hal9000@*</hostname>
</admin>


###########################################################################
# SQL [OPTIONAL]
#   Your SQL configuration for use with Denora.
#
# To make use of SQL use these tokens and change their setting to the
# appropriate values.
#       
# Please read docs/MYSQL file for more info and details.
#
# Required tokens:
#  module     - SQL server type.
#                Available options:
#                  mysql
#				   postgre
#                NOTE: Denora supports MySQL. Future versions may support
#                other SQL technologies.
#  host        - SQL server hostname.
#  user        - SQL user to log in with.
#  passwd      - SQL pass required for the specified user to log in.
#  name        - SQL database name Denora uses
#
# Optional tokens:
#  sock        - MySQL UNIX socket
#  port        - MySQL TCP port
#  retryonlost - Attempt to reconnect sql even if we lost the server
#  retries     - Number of retry attempts
#  retrygap    - Time gap between each retry attempt
#                The product of these values must be between 1 and 60.
#  disableopt  - Use with caution, only enable this if you are having
#                problems with mysql and zlib functions
#  keepusers   - Do not truncate the users table on startup
#                Use this only in combination with the "usercache" setting!
#                Only enable this if you really need it.
#  keepservers - Do not truncate the server table on startup
#                Use this only in combination with the "servercache"
#                setting! Only enable this if you really need it.

<sql>
    // required tokens
    <Module>mysql</Module>
    <SqlHost>localhost</SqlHost>
    <SqlUser>anonymous</SqlUser>
    <SqlPass>password</SqlPass>
    <SqlName>denora</SqlName>

    // optional tokens
    #<SqlSock>/tmp/mysql.sock</SqlSock>
    #<SqlPort>3306</SqlPort>
    #<SQLRetryOnServerLost />;
    #<SqlRetries>6</SqlRetries>
    #<SqlRetryGap>10</SqlRetryGap>
    #<DisableMySQLOPT />
    #<KeepUserTable />
    #<KeepServerTable />;
</sql>

###########################################################################
# Tables [REQUIRED]
#   Sets the various SQL table names.
#
# Don't change the default values unless really needed!

<sqltables>
    // required tokens
    <UserTable>user</UserTable>          		  # Name of the Users table
    <ChanBansTable>chanbans</ChanBansTable>       # Name of the Channel Bans table
    <ChanExceptTable>chanexcept</ChanExceptTable> # Name of the Channel Exceptions table
    <IsOnTable>ison</IsOnTable>			          # Name of the ISON table
    <ServerTable>server</ServerTable>	          # Name of the Servers table
    <GlineTable>glines</GlineTable>               # Name of the Glines table
    <ChanTable>chan<ChanTable>                    # Name of the Channel table
    <MaxValueTable>maxvalues</MaxValueTable>;     # Name of the Maxvalues table
    <ChanInviteTable>chaninvites</ChanInviteTable> # Name of the Channel Invites table
    <TLDTable>tld</TLDTable>                       # Name of the TLD table
    <CTCPTable>ctcp</CTCPTable>                    # Name of the CTCP table
    <SqlineTable>sqline</SqlineTable>        # Name of the SQLine table
    <SglineTable>sgline</SglineTable>        # Name of the SGLine table
    <AliasesTable>aliases</AliasesTable>       # Name of the Chan Stats Aliases table
    <CStatsTable>cstats</CStatsTable>        # Name of the Chan Stats Channel table
    <UStatsTable>ustats</UStatsTable>       # Name of the Chan Stats User table
    <StatsTable>stats</StatsTable>         # Name of the Hourly stats table
    <SpamTable>spamfilters</SpamTable>   # Name of the Spam Filter Table
    <CurrentTable>current</CurrentTable>       # Name of the table which holds the current info
    <ChanStatsTable>channelstats</ChanStatsTable>  # Name of the Channel Stats by Hour
    <ServerStatsTable>serverstats</ServerStatsTable>   # Name of the Server Stats by Hour
    <ChanQuietTable>chanquiet</ChanQuietTable>     # Name of the Channel Quiet table
    <AdminTable>admin</AdminTable>         # Name of the Admins table
</sqltables>

###########################################################################
# Modules [OPTIONAL]
#   Allows Denora's functionality to be extended by loading modules.
#
# Please read docs/MODULES file for more info and details.
#
# Optional tokens:
#  autoload    - Name of the module to load on startup.
#                There can be up to 128 autoload tokens.
#  delayed     - Name of the module to load once Denora is already
#                connected to the IRCd.
#                There can be up to 128 delayed tokens.


<modules>
    // optional tokens
    #<autoload>ss_uptime</autoload>
    #<autoload>next_module</autoload>
    #<delayed>irc_delay_example</delayed>
    #<delayed>mysql_backup</delayed>

    # Both Modules mysql_optimize and mysql_optimize_event will call
    # OPTIMIZE TABLE each midnight.
    # mysql_optimize       will do a normal query and waits until its done
    #                      this could take a few moments on larger tables
    # mysql_optimize_event installs a MySQL EVENT that will automatically
    #                      triggered each midnight on your SQL server,
    #                      even if denora is not running.
    #                      For this module you need the EVENT privilegue
    # YOU NEED TO ACTIVATE ONLY ONE OF THOSE MODULES.
    #<delayed>mysql_optimize</delayed>
    #<delayed>mysql_optimize_event</delayed>
</modules>

###########################################################################
# XML RPC [OPTIONAL]
#   XML RPC is a lightweight Server/Parser allowing user to send XMLRPC
#   data to Denora and have the data returned in the XMLRPC standard.
#
# Please read docs/XMLRPC file for more info and details.
#
# Required tokens:
#  xmlrpc_enable - You must set this for XMLRPC to start
#
# Optional tokens:
#  xmlrpc_host   - IP address to have the XMLRPC server on
#  xmlrpc_port   - Port on which to listen to
#  xmlrpc_accept - Accept only data from these hosts.
#                  There can be up to 128 client host addresses.

<xmlrpc>
    #<XMLRPC_Enable />
    #<XMLRPC_Host>127.0.0.1</XMLRPC_Host>
    #<XMLRPC_Port>8080</XMLRPC_Port>
    #<ExtSockIPs>127.0.0.1</ExtSockIPs>
    #<ExtSockIPs>192.168.0.1</ExtSockIPs>
</xmlrpc>

